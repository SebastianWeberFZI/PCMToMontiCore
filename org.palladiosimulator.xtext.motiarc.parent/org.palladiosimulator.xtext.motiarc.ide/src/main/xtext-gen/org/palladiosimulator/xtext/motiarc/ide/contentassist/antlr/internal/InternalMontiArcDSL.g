/*
 * generated by Xtext 2.34.0
 */
grammar InternalMontiArcDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.palladiosimulator.xtext.motiarc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.palladiosimulator.xtext.motiarc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.palladiosimulator.xtext.motiarc.services.MontiArcDSLGrammarAccess;

}
@parser::members {
	private MontiArcDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(MontiArcDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMACompilationUnit
entryRuleMACompilationUnit
:
{ before(grammarAccess.getMACompilationUnitRule()); }
	 ruleMACompilationUnit
{ after(grammarAccess.getMACompilationUnitRule()); } 
	 EOF 
;

// Rule MACompilationUnit
ruleMACompilationUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMACompilationUnitAccess().getGroup()); }
		(rule__MACompilationUnit__Group__0)
		{ after(grammarAccess.getMACompilationUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getGroup()); }
		(rule__Component__Group__0)
		{ after(grammarAccess.getComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignature
entryRuleSignature
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameters
entryRuleParameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArcElement
entryRuleArcElement
:
{ before(grammarAccess.getArcElementRule()); }
	 ruleArcElement
{ after(grammarAccess.getArcElementRule()); } 
	 EOF 
;

// Rule ArcElement
ruleArcElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArcElementAccess().getAlternatives()); }
		(rule__ArcElement__Alternatives)
		{ after(grammarAccess.getArcElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubComponent
entryRuleSubComponent
:
{ before(grammarAccess.getSubComponentRule()); }
	 ruleSubComponent
{ after(grammarAccess.getSubComponentRule()); } 
	 EOF 
;

// Rule SubComponent
ruleSubComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubComponentAccess().getGroup()); }
		(rule__SubComponent__Group__0)
		{ after(grammarAccess.getSubComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnector
entryRuleConnector
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorAccess().getGroup()); }
		(rule__Connector__Group__0)
		{ after(grammarAccess.getConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePorts
entryRulePorts
:
{ before(grammarAccess.getPortsRule()); }
	 rulePorts
{ after(grammarAccess.getPortsRule()); } 
	 EOF 
;

// Rule Ports
rulePorts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortsAccess().getGroup()); }
		(rule__Ports__Group__0)
		{ after(grammarAccess.getPortsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePort
entryRulePort
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortAccess().getGroup()); }
		(rule__Port__Group__0)
		{ after(grammarAccess.getPortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNames
entryRuleNames
:
{ before(grammarAccess.getNamesRule()); }
	 ruleNames
{ after(grammarAccess.getNamesRule()); } 
	 EOF 
;

// Rule Names
ruleNames 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamesAccess().getGroup()); }
		(rule__Names__Group__0)
		{ after(grammarAccess.getNamesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAutomaton
entryRuleAutomaton
:
{ before(grammarAccess.getAutomatonRule()); }
	 ruleAutomaton
{ after(grammarAccess.getAutomatonRule()); } 
	 EOF 
;

// Rule Automaton
ruleAutomaton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAutomatonAccess().getGroup()); }
		(rule__Automaton__Group__0)
		{ after(grammarAccess.getAutomatonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialState
entryRuleInitialState
:
{ before(grammarAccess.getInitialStateRule()); }
	 ruleInitialState
{ after(grammarAccess.getInitialStateRule()); } 
	 EOF 
;

// Rule InitialState
ruleInitialState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialStateAccess().getGroup()); }
		(rule__InitialState__Group__0)
		{ after(grammarAccess.getInitialStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportStatements
entryRuleImportStatements
:
{ before(grammarAccess.getImportStatementsRule()); }
	 ruleImportStatements
{ after(grammarAccess.getImportStatementsRule()); } 
	 EOF 
;

// Rule ImportStatements
ruleImportStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportStatementsAccess().getGroup()); }
		(rule__ImportStatements__Group__0)
		{ after(grammarAccess.getImportStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMCPrimitiveType
entryRuleMCPrimitiveType
:
{ before(grammarAccess.getMCPrimitiveTypeRule()); }
	 ruleMCPrimitiveType
{ after(grammarAccess.getMCPrimitiveTypeRule()); } 
	 EOF 
;

// Rule MCPrimitiveType
ruleMCPrimitiveType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeAssignment()); }
		(rule__MCPrimitiveType__TypeAssignment)
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMCCollectionType
entryRuleMCCollectionType
:
{ before(grammarAccess.getMCCollectionTypeRule()); }
	 ruleMCCollectionType
{ after(grammarAccess.getMCCollectionTypeRule()); } 
	 EOF 
;

// Rule MCCollectionType
ruleMCCollectionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMCCollectionTypeAccess().getGroup()); }
		(rule__MCCollectionType__Group__0)
		{ after(grammarAccess.getMCCollectionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMCArrayType
entryRuleMCArrayType
:
{ before(grammarAccess.getMCArrayTypeRule()); }
	 ruleMCArrayType
{ after(grammarAccess.getMCArrayTypeRule()); } 
	 EOF 
;

// Rule MCArrayType
ruleMCArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMCArrayTypeAccess().getGroup()); }
		(rule__MCArrayType__Group__0)
		{ after(grammarAccess.getMCArrayTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
		(rule__LiteralExpression__Alternatives)
		{ after(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getLiteralAssignment()); }
		(rule__NumberLiteral__LiteralAssignment)
		{ after(grammarAccess.getNumberLiteralAccess().getLiteralAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getLiteralAssignment()); }
		(rule__StringLiteral__LiteralAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getLiteralAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNameExpression
entryRuleNameExpression
:
{ before(grammarAccess.getNameExpressionRule()); }
	 ruleNameExpression
{ after(grammarAccess.getNameExpressionRule()); } 
	 EOF 
;

// Rule NameExpression
ruleNameExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameExpressionAccess().getNameAssignment()); }
		(rule__NameExpression__NameAssignment)
		{ after(grammarAccess.getNameExpressionAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArguments
entryRuleArguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup()); }
		(rule__Arguments__Group__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getGroup()); }
		(rule__Argument__Group__0)
		{ after(grammarAccess.getArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArcElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArcElementAccess().getComponentParserRuleCall_0()); }
		ruleComponent
		{ after(grammarAccess.getArcElementAccess().getComponentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getArcElementAccess().getSubComponentParserRuleCall_1()); }
		ruleSubComponent
		{ after(grammarAccess.getArcElementAccess().getSubComponentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getArcElementAccess().getConnectorParserRuleCall_2()); }
		ruleConnector
		{ after(grammarAccess.getArcElementAccess().getConnectorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getArcElementAccess().getPortsParserRuleCall_3()); }
		rulePorts
		{ after(grammarAccess.getArcElementAccess().getPortsParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getArcElementAccess().getVariableParserRuleCall_4()); }
		ruleVariable
		{ after(grammarAccess.getArcElementAccess().getVariableParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getArcElementAccess().getAutomatonParserRuleCall_5()); }
		ruleAutomaton
		{ after(grammarAccess.getArcElementAccess().getAutomatonParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getInAssignment_1_0()); }
		(rule__Port__InAssignment_1_0)
		{ after(grammarAccess.getPortAccess().getInAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPortAccess().getOutAssignment_1_1()); }
		(rule__Port__OutAssignment_1_1)
		{ after(grammarAccess.getPortAccess().getOutAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatonAccess().getStatesAssignment_4_0()); }
		(rule__Automaton__StatesAssignment_4_0)
		{ after(grammarAccess.getAutomatonAccess().getStatesAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getAutomatonAccess().getInitialStatesAssignment_4_1()); }
		(rule__Automaton__InitialStatesAssignment_4_1)
		{ after(grammarAccess.getAutomatonAccess().getInitialStatesAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getAutomatonAccess().getTransitionsAssignment_4_2()); }
		(rule__Automaton__TransitionsAssignment_4_2)
		{ after(grammarAccess.getAutomatonAccess().getTransitionsAssignment_4_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getNameMCQUALIFIEDNAMETerminalRuleCall_1_0_0()); }
		RULE_MCQUALIFIEDNAME
		{ after(grammarAccess.getPackageAccess().getNameMCQUALIFIEDNAMETerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0_1()); }
		RULE_ID
		{ after(grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getMCPrimitiveTypeParserRuleCall_0()); }
		ruleMCPrimitiveType
		{ after(grammarAccess.getTypeAccess().getMCPrimitiveTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getMCArrayTypeParserRuleCall_1()); }
		ruleMCArrayType
		{ after(grammarAccess.getTypeAccess().getMCArrayTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getMCCollectionTypeParserRuleCall_2()); }
		ruleMCCollectionType
		{ after(grammarAccess.getTypeAccess().getMCCollectionTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCPrimitiveType__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeBooleanKeyword_0_0()); }
		'boolean'
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeBooleanKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeByteKeyword_0_1()); }
		'byte'
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeByteKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeShortKeyword_0_2()); }
		'short'
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeShortKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeIntKeyword_0_3()); }
		'int'
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeIntKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeLongKeyword_0_4()); }
		'long'
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeLongKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeCharKeyword_0_5()); }
		'char'
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeCharKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeFloatKeyword_0_6()); }
		'float'
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeFloatKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeDoubleKeyword_0_7()); }
		'double'
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeDoubleKeyword_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeStringKeyword_0_8()); }
		'String'
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeStringKeyword_0_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__CollectionAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMCCollectionTypeAccess().getCollectionSetKeyword_0_0_0()); }
		'Set'
		{ after(grammarAccess.getMCCollectionTypeAccess().getCollectionSetKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMCCollectionTypeAccess().getCollectionListKeyword_0_0_1()); }
		'List'
		{ after(grammarAccess.getMCCollectionTypeAccess().getCollectionListKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMCCollectionTypeAccess().getCollectionMapKeyword_0_0_2()); }
		'Map'
		{ after(grammarAccess.getMCCollectionTypeAccess().getCollectionMapKeyword_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMCCollectionTypeAccess().getCollectionOptionalKeyword_0_0_3()); }
		'Optional'
		{ after(grammarAccess.getMCCollectionTypeAccess().getCollectionOptionalKeyword_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNameExpressionParserRuleCall_0()); }
		ruleNameExpression
		{ after(grammarAccess.getExpressionAccess().getNameExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
		ruleLiteralExpression
		{ after(grammarAccess.getExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getNumberLiteralParserRuleCall_0()); }
		ruleNumberLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getNumberLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getStringLiteralParserRuleCall_1()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getStringLiteralParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MACompilationUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MACompilationUnit__Group__0__Impl
	rule__MACompilationUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MACompilationUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMACompilationUnitAccess().getPackageAssignment_0()); }
	(rule__MACompilationUnit__PackageAssignment_0)
	{ after(grammarAccess.getMACompilationUnitAccess().getPackageAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MACompilationUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MACompilationUnit__Group__1__Impl
	rule__MACompilationUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MACompilationUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMACompilationUnitAccess().getImportStatementsAssignment_1()); }
	(rule__MACompilationUnit__ImportStatementsAssignment_1)*
	{ after(grammarAccess.getMACompilationUnitAccess().getImportStatementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MACompilationUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MACompilationUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MACompilationUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMACompilationUnitAccess().getComponentAssignment_2()); }
	(rule__MACompilationUnit__ComponentAssignment_2)
	{ after(grammarAccess.getMACompilationUnitAccess().getComponentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
	'component'
	{ after(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getNameAssignment_1()); }
	(rule__Component__NameAssignment_1)
	{ after(grammarAccess.getComponentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getSignatureAssignment_2()); }
	(rule__Component__SignatureAssignment_2)
	{ after(grammarAccess.getComponentAccess().getSignatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__4__Impl
	rule__Component__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getArcElementsAssignment_4()); }
	(rule__Component__ArcElementsAssignment_4)*
	{ after(grammarAccess.getComponentAccess().getArcElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getSignatureAction_0()); }
	()
	{ after(grammarAccess.getSignatureAccess().getSignatureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
	rule__Signature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getParametersAssignment_1()); }
	(rule__Signature__ParametersAssignment_1)?
	{ after(grammarAccess.getSignatureAccess().getParametersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getGroup_2()); }
	(rule__Signature__Group_2__0)?
	{ after(grammarAccess.getSignatureAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group_2__0__Impl
	rule__Signature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getSignatureAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getTypeAssignment_2_1()); }
	(rule__Signature__TypeAssignment_2_1)
	{ after(grammarAccess.getSignatureAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAssignment_0()); }
	(rule__Parameters__ParametersAssignment_0)
	{ after(grammarAccess.getParametersAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getGroup_1()); }
	(rule__Parameters__Group_1__0)*
	{ after(grammarAccess.getParametersAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_1__0__Impl
	rule__Parameters__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParametersAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAssignment_1_1()); }
	(rule__Parameters__ParametersAssignment_1_1)
	{ after(grammarAccess.getParametersAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
	(rule__Parameter__TypeAssignment_0)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_2()); }
	(rule__Parameter__Group_2__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__0__Impl
	rule__Parameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getParameterAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getExpressionAssignment_2_1()); }
	(rule__Parameter__ExpressionAssignment_2_1)
	{ after(grammarAccess.getParameterAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubComponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponent__Group__0__Impl
	rule__SubComponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentAccess().getComponentKeyword_0()); }
	'component'
	{ after(grammarAccess.getSubComponentAccess().getComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponent__Group__1__Impl
	rule__SubComponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentAccess().getTypeAssignment_1()); }
	(rule__SubComponent__TypeAssignment_1)
	{ after(grammarAccess.getSubComponentAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponent__Group__2__Impl
	rule__SubComponent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentAccess().getArgumentsAssignment_2()); }
	(rule__SubComponent__ArgumentsAssignment_2)?
	{ after(grammarAccess.getSubComponentAccess().getArgumentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponent__Group__3__Impl
	rule__SubComponent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentAccess().getInstancesAssignment_3()); }
	(rule__SubComponent__InstancesAssignment_3)
	{ after(grammarAccess.getSubComponentAccess().getInstancesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubComponent__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubComponentAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getSubComponentAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__0__Impl
	rule__Connector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConnectKeyword_0()); }
	'connect'
	{ after(grammarAccess.getConnectorAccess().getConnectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__1__Impl
	rule__Connector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getSourceAssignment_1()); }
	(rule__Connector__SourceAssignment_1)
	{ after(grammarAccess.getConnectorAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__2__Impl
	rule__Connector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getConnectorAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__3__Impl
	rule__Connector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getTargetsAssignment_3()); }
	(rule__Connector__TargetsAssignment_3)
	{ after(grammarAccess.getConnectorAccess().getTargetsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getConnectorAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ports__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ports__Group__0__Impl
	rule__Ports__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortsAccess().getPortKeyword_0()); }
	'port'
	{ after(grammarAccess.getPortsAccess().getPortKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ports__Group__1__Impl
	rule__Ports__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortsAccess().getPortsAssignment_1()); }
	(rule__Ports__PortsAssignment_1)
	{ after(grammarAccess.getPortsAccess().getPortsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ports__Group__2__Impl
	rule__Ports__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortsAccess().getGroup_2()); }
	(rule__Ports__Group_2__0)*
	{ after(grammarAccess.getPortsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ports__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortsAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getPortsAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ports__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ports__Group_2__0__Impl
	rule__Ports__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getPortsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ports__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortsAccess().getPortsAssignment_2_1()); }
	(rule__Ports__PortsAssignment_2_1)
	{ after(grammarAccess.getPortsAccess().getPortsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__0__Impl
	rule__Port__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getSyncAssignment_0()); }
	(rule__Port__SyncAssignment_0)
	{ after(grammarAccess.getPortAccess().getSyncAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__1__Impl
	rule__Port__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getAlternatives_1()); }
	(rule__Port__Alternatives_1)
	{ after(grammarAccess.getPortAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__2__Impl
	rule__Port__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getTypeAssignment_2()); }
	(rule__Port__TypeAssignment_2)
	{ after(grammarAccess.getPortAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getNamesAssignment_3()); }
	(rule__Port__NamesAssignment_3)?
	{ after(grammarAccess.getPortAccess().getNamesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Names__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Names__Group__0__Impl
	rule__Names__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamesAccess().getNamesAssignment_0()); }
	(rule__Names__NamesAssignment_0)
	{ after(grammarAccess.getNamesAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Names__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamesAccess().getGroup_1()); }
	(rule__Names__Group_1__0)*
	{ after(grammarAccess.getNamesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Names__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Names__Group_1__0__Impl
	rule__Names__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamesAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNamesAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Names__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamesAccess().getNamesAssignment_1_1()); }
	(rule__Names__NamesAssignment_1_1)
	{ after(grammarAccess.getNamesAccess().getNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
	(rule__Variable__TypeAssignment_0)
	{ after(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNamesAssignment_1()); }
	(rule__Variable__NamesAssignment_1)?
	{ after(grammarAccess.getVariableAccess().getNamesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getVariableAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Automaton__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__0__Impl
	rule__Automaton__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getAutomatonAction_0()); }
	()
	{ after(grammarAccess.getAutomatonAccess().getAutomatonAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__1__Impl
	rule__Automaton__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getAutomatonKeyword_1()); }
	'automaton'
	{ after(grammarAccess.getAutomatonAccess().getAutomatonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__2__Impl
	rule__Automaton__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getNameAssignment_2()); }
	(rule__Automaton__NameAssignment_2)?
	{ after(grammarAccess.getAutomatonAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__3__Impl
	rule__Automaton__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getAutomatonAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__4__Impl
	rule__Automaton__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getAlternatives_4()); }
	(rule__Automaton__Alternatives_4)*
	{ after(grammarAccess.getAutomatonAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Automaton__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatonAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getAutomatonAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getStateKeyword_0()); }
	'state'
	{ after(grammarAccess.getStateAccess().getStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
	(rule__State__NameAssignment_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getStateAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__0__Impl
	rule__InitialState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getInitialKeyword_0()); }
	'initial'
	{ after(grammarAccess.getInitialStateAccess().getInitialKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__1__Impl
	rule__InitialState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getNameAssignment_1()); }
	(rule__InitialState__NameAssignment_1)
	{ after(grammarAccess.getInitialStateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__2__Impl
	rule__InitialState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getGroup_2()); }
	(rule__InitialState__Group_2__0)?
	{ after(grammarAccess.getInitialStateAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getInitialStateAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_2__0__Impl
	rule__InitialState__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getSolidusKeyword_2_0()); }
	'/'
	{ after(grammarAccess.getInitialStateAccess().getSolidusKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getBlockAssignment_2_1()); }
	(rule__InitialState__BlockAssignment_2_1)
	{ after(grammarAccess.getInitialStateAccess().getBlockAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getSourceAssignment_0()); }
	(rule__Transition__SourceAssignment_0)
	{ after(grammarAccess.getTransitionAccess().getSourceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGroup_1()); }
	(rule__Transition__Group_1__0)?
	{ after(grammarAccess.getTransitionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGroup_2()); }
	(rule__Transition__Group_2__0)?
	{ after(grammarAccess.getTransitionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGroup_3()); }
	(rule__Transition__Group_3__0)?
	{ after(grammarAccess.getTransitionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getTransitionAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_1__0__Impl
	rule__Transition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
	'->'
	{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTargetAssignment_1_1()); }
	(rule__Transition__TargetAssignment_1_1)
	{ after(grammarAccess.getTransitionAccess().getTargetAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_2__0__Impl
	rule__Transition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getTransitionAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_2__1__Impl
	rule__Transition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getExpressionAssignment_2_1()); }
	(rule__Transition__ExpressionAssignment_2_1)
	{ after(grammarAccess.getTransitionAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getTransitionAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_3__0__Impl
	rule__Transition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getSolidusKeyword_3_0()); }
	'/'
	{ after(grammarAccess.getTransitionAccess().getSolidusKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getReactionAssignment_3_1()); }
	(rule__Transition__ReactionAssignment_3_1)
	{ after(grammarAccess.getTransitionAccess().getReactionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getGroup_1()); }
	(rule__Block__Group_1__0)?
	{ after(grammarAccess.getBlockAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getExpressionsAssignment_2()); }
	(rule__Block__ExpressionsAssignment_2)
	{ after(grammarAccess.getBlockAccess().getExpressionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__3__Impl
	rule__Block__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getGroup_3()); }
	(rule__Block__Group_3__0)*
	{ after(grammarAccess.getBlockAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_1__0__Impl
	rule__Block__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getNameAssignment_1_0()); }
	(rule__Block__NameAssignment_1_0)
	{ after(grammarAccess.getBlockAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getBlockAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_3__0__Impl
	rule__Block__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getBlockAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getExpressionsAssignment_3_1()); }
	(rule__Block__ExpressionsAssignment_3_1)
	{ after(grammarAccess.getBlockAccess().getExpressionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatements__Group__0__Impl
	rule__ImportStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementsAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportStatementsAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatements__Group__1__Impl
	rule__ImportStatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementsAccess().getImportUriAssignment_1()); }
	(rule__ImportStatements__ImportUriAssignment_1)
	{ after(grammarAccess.getImportStatementsAccess().getImportUriAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatements__Group__2__Impl
	rule__ImportStatements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementsAccess().getGroup_2()); }
	(rule__ImportStatements__Group_2__0)?
	{ after(grammarAccess.getImportStatementsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatements__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementsAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getImportStatementsAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatements__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatements__Group_2__0__Impl
	rule__ImportStatements__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementsAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getImportStatementsAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatements__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementsAccess().getStarAssignment_2_1()); }
	(rule__ImportStatements__StarAssignment_2_1)
	{ after(grammarAccess.getImportStatementsAccess().getStarAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getNameAssignment_1()); }
	(rule__Package__NameAssignment_1)
	{ after(grammarAccess.getPackageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getPackageAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MCCollectionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MCCollectionType__Group__0__Impl
	rule__MCCollectionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMCCollectionTypeAccess().getCollectionAssignment_0()); }
	(rule__MCCollectionType__CollectionAssignment_0)
	{ after(grammarAccess.getMCCollectionTypeAccess().getCollectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MCCollectionType__Group__1__Impl
	rule__MCCollectionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMCCollectionTypeAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getMCCollectionTypeAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MCCollectionType__Group__2__Impl
	rule__MCCollectionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMCCollectionTypeAccess().getInnerTypeAssignment_2()); }
	(rule__MCCollectionType__InnerTypeAssignment_2)
	{ after(grammarAccess.getMCCollectionTypeAccess().getInnerTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MCCollectionType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMCCollectionTypeAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getMCCollectionTypeAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MCArrayType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MCArrayType__Group__0__Impl
	rule__MCArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCArrayType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMCArrayTypeAccess().getMCPrimitiveTypeParserRuleCall_0()); }
	ruleMCPrimitiveType
	{ after(grammarAccess.getMCArrayTypeAccess().getMCPrimitiveTypeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCArrayType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MCArrayType__Group__1__Impl
	rule__MCArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCArrayType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMCArrayTypeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getMCArrayTypeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCArrayType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MCArrayType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCArrayType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMCArrayTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getMCArrayTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getArgumentsAssignment_1()); }
	(rule__Arguments__ArgumentsAssignment_1)
	{ after(grammarAccess.getArgumentsAccess().getArgumentsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__2__Impl
	rule__Arguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2()); }
	(rule__Arguments__Group_2__0)*
	{ after(grammarAccess.getArgumentsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__0__Impl
	rule__Arguments__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getArgumentsAssignment_2_1()); }
	(rule__Arguments__ArgumentsAssignment_2_1)
	{ after(grammarAccess.getArgumentsAccess().getArgumentsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getNameAssignment_0()); }
	(rule__Argument__NameAssignment_0)
	{ after(grammarAccess.getArgumentAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getExpressionAssignment_1()); }
	(rule__Argument__ExpressionAssignment_1)
	{ after(grammarAccess.getArgumentAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MACompilationUnit__PackageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMACompilationUnitAccess().getPackagePackageParserRuleCall_0_0()); }
		rulePackage
		{ after(grammarAccess.getMACompilationUnitAccess().getPackagePackageParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MACompilationUnit__ImportStatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMACompilationUnitAccess().getImportStatementsImportStatementsParserRuleCall_1_0()); }
		ruleImportStatements
		{ after(grammarAccess.getMACompilationUnitAccess().getImportStatementsImportStatementsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MACompilationUnit__ComponentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMACompilationUnitAccess().getComponentComponentParserRuleCall_2_0()); }
		ruleComponent
		{ after(grammarAccess.getMACompilationUnitAccess().getComponentComponentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__SignatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getSignatureSignatureParserRuleCall_2_0()); }
		ruleSignature
		{ after(grammarAccess.getComponentAccess().getSignatureSignatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ArcElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getArcElementsArcElementParserRuleCall_4_0()); }
		ruleArcElement
		{ after(grammarAccess.getComponentAccess().getArcElementsArcElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ParametersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_1_0()); }
		ruleParameters
		{ after(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruleType
		{ after(grammarAccess.getSignatureAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParametersParameterParserRuleCall_0_0()); }
		ruleParameter
		{ after(grammarAccess.getParametersAccess().getParametersParameterParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParametersParameterParserRuleCall_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getParametersAccess().getParametersParameterParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubComponentAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getSubComponentAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__ArgumentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubComponentAccess().getArgumentsArgumentsParserRuleCall_2_0()); }
		ruleArguments
		{ after(grammarAccess.getSubComponentAccess().getArgumentsArgumentsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubComponent__InstancesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubComponentAccess().getInstancesNamesParserRuleCall_3_0()); }
		ruleNames
		{ after(grammarAccess.getSubComponentAccess().getInstancesNamesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getSourceIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConnectorAccess().getSourceIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__TargetsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getTargetsNamesParserRuleCall_3_0()); }
		ruleNames
		{ after(grammarAccess.getConnectorAccess().getTargetsNamesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__PortsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortsAccess().getPortsPortParserRuleCall_1_0()); }
		rulePort
		{ after(grammarAccess.getPortsAccess().getPortsPortParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ports__PortsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortsAccess().getPortsPortParserRuleCall_2_1_0()); }
		rulePort
		{ after(grammarAccess.getPortsAccess().getPortsPortParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__SyncAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getSyncSYNCTerminalRuleCall_0_0()); }
		RULE_SYNC
		{ after(grammarAccess.getPortAccess().getSyncSYNCTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__InAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getInInKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getPortAccess().getInInKeyword_1_0_0()); }
			'in'
			{ after(grammarAccess.getPortAccess().getInInKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getPortAccess().getInInKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__OutAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getOutOutKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getPortAccess().getOutOutKeyword_1_1_0()); }
			'out'
			{ after(grammarAccess.getPortAccess().getOutOutKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getPortAccess().getOutOutKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getPortAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__NamesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getNamesNamesParserRuleCall_3_0()); }
		ruleNames
		{ after(grammarAccess.getPortAccess().getNamesNamesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamesAccess().getNamesIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNamesAccess().getNamesIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Names__NamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamesAccess().getNamesIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNamesAccess().getNamesIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getVariableAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NamesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNamesNamesParserRuleCall_1_0()); }
		ruleNames
		{ after(grammarAccess.getVariableAccess().getNamesNamesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__StatesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatonAccess().getStatesStateParserRuleCall_4_0_0()); }
		ruleState
		{ after(grammarAccess.getAutomatonAccess().getStatesStateParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__InitialStatesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatonAccess().getInitialStatesInitialStateParserRuleCall_4_1_0()); }
		ruleInitialState
		{ after(grammarAccess.getAutomatonAccess().getInitialStatesInitialStateParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Automaton__TransitionsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatonAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
		ruleTransition
		{ after(grammarAccess.getAutomatonAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInitialStateAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__BlockAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getBlockBlockParserRuleCall_2_1_0()); }
		ruleBlock
		{ after(grammarAccess.getInitialStateAccess().getBlockBlockParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SourceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getSourceStateCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getSourceStateIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionAccess().getSourceStateIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getSourceStateCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getTargetCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getTargetIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionAccess().getTargetIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getTargetCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getTransitionAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ReactionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getReactionBlockParserRuleCall_3_1_0()); }
		ruleBlock
		{ after(grammarAccess.getTransitionAccess().getReactionBlockParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBlockAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__ExpressionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getExpressionsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getBlockAccess().getExpressionsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__ExpressionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getExpressionsExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getBlockAccess().getExpressionsExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__ImportUriAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementsAccess().getImportUriMCQUALIFIEDNAMETerminalRuleCall_1_0()); }
		RULE_MCQUALIFIEDNAME
		{ after(grammarAccess.getImportStatementsAccess().getImportUriMCQUALIFIEDNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatements__StarAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementsAccess().getStarAsteriskKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getImportStatementsAccess().getStarAsteriskKeyword_2_1_0()); }
			'*'
			{ after(grammarAccess.getImportStatementsAccess().getStarAsteriskKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getImportStatementsAccess().getStarAsteriskKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getNameAlternatives_1_0()); }
		(rule__Package__NameAlternatives_1_0)
		{ after(grammarAccess.getPackageAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCPrimitiveType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMCPrimitiveTypeAccess().getTypeAlternatives_0()); }
		(rule__MCPrimitiveType__TypeAlternatives_0)
		{ after(grammarAccess.getMCPrimitiveTypeAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__CollectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMCCollectionTypeAccess().getCollectionAlternatives_0_0()); }
		(rule__MCCollectionType__CollectionAlternatives_0_0)
		{ after(grammarAccess.getMCCollectionTypeAccess().getCollectionAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MCCollectionType__InnerTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMCCollectionTypeAccess().getInnerTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getMCCollectionTypeAccess().getInnerTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__LiteralAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getLiteralINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberLiteralAccess().getLiteralINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__LiteralAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getLiteralSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getLiteralSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpression__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameExpressionAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getNameExpressionAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ArgumentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_0()); }
		ruleArgument
		{ after(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ArgumentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_2_1_0()); }
		ruleArgument
		{ after(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArgumentAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SYNC : '<<sync>>';

RULE_MCQUALIFIEDNAME : RULE_ID ('.' RULE_ID)+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
